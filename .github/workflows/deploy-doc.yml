name: docs

on:
  # 每当 push 到 main 分支时触发部署
  # push:
  #   branches: [main]
  # 手动触发部署
  workflow_dispatch:

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      # 检出仓库
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0
          # 如果你文档需要Git 子模块(submodule)，请取消下一行的注释
          # submodules: true

      # 安装依赖 yarn
      - name: Install dependencies
        # 如果没有命中缓存才执行 npm install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 20
          # 缓存 yarn 依赖
          # cache: yarn

      # 如果你的依赖是使用yarn的，用这种
      # 缓存 yarn node_modules
      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 运行构建脚本
      - name: Build
        run: yarn run docs:build
        

      # 查看 workflow 的文档来获取更多信息
      # @see https://github.com/crazy-max/ghaction-github-pages
      - name: Deploy
        uses: crazy-max/ghaction-github-pages@v4
        with:
          # 部署到 gh-pages 分支
          target_branch: gh-pages
          # 部署目录为 VuePress 的默认输出目录
          build_dir: src/.vuepress/dist
