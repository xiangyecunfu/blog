import{_ as n,o as s,c as a,e}from"./app-D8pFkU2i.js";const p="/blog/assets/route-navigation-solution-DDgdiSxF.png",t="/blog/assets/image-20240527222526140-DF1qqFpt.png",o="/blog/assets/image-20240527223259200-Crb4YkNP.png",l={},c=e('<h1 id="关于路由导航卫视解析流程" tabindex="-1"><a class="header-anchor" href="#关于路由导航卫视解析流程"><span>关于路由导航卫视解析流程</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p><code>vue-router</code>完整的导航解析流程官方给出来的是以下的方式：</p><ol><li>导航被触发。</li><li>在失活的组件里调用 <code>beforeRouteLeave</code> 守卫。</li><li>调用全局的 <code>beforeEach</code> 守卫。</li><li>在重用的组件里调用 <code>beforeRouteUpdate</code> 守卫(2.2+)。</li><li>在路由配置里调用 <code>beforeEnter</code>。</li><li>解析异步路由组件。</li><li>在被激活的组件里调用 <code>beforeRouteEnter</code>。</li><li>调用全局的 <code>beforeResolve</code> 守卫(2.5+)。</li><li>导航被确认。</li><li>调用全局的 <code>afterEach</code> 钩子。</li><li>触发 DOM 更新。</li><li>调用 <code>beforeRouteEnter</code> 守卫中传给 <code>next</code> 的回调函数，创建好的组件实例会作为回调函数的参数传入。</li></ol><p>但是你实际上真的是理解了上述的流程吗？</p><h2 id="实际的解析流程" tabindex="-1"><a class="header-anchor" href="#实际的解析流程"><span>实际的解析流程</span></a></h2><p>其实它上述的流程是存在偏差的， 就是在判断组件是否失活这里， 可以通过下图的流程来判断。</p><p><img src="'+p+`" alt="路由导航解析流程"></p><h2 id="理解组件失活" tabindex="-1"><a class="header-anchor" href="#理解组件失活"><span>理解组件失活</span></a></h2><p>vue中组件失活， 就相当于整个组件不在页面中展示了，需要搭配vue中的<code>KeepAlive</code>内置组件实现，这里就不过多解释，需要的自己去看官方文档， 借助它自己的两个API(<code>onActivated</code>、<code>onDeactivated</code>)理解。</p><h2 id="未失活的组件路由导航解析流程" tabindex="-1"><a class="header-anchor" href="#未失活的组件路由导航解析流程"><span>未失活的组件路由导航解析流程</span></a></h2><p>未失活的组件路由更新， 一般指的是主路由未发生变化，只是增加了路由携带的参数。例如：<code>/home =&gt; /home?name=&#39;zhangsan&#39;&amp;age=&quot;18&quot;</code>。</p><p>准备一个home页面， 配置一个点击事件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// router.js中的三个全局路由导航</span></span>
<span class="line">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span><span class="token string">&#39;&lt;==================&gt;&#39;</span><span class="token punctuation">,</span> from<span class="token punctuation">)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;全局前置守卫&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">router<span class="token punctuation">.</span><span class="token function">beforeResolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// console.log(to,&#39;&lt;==================&gt;&#39;, from)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;全局解析守卫&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// console.log(to,&#39;&lt;==================&gt;&#39;, from)</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;全局后置钩子&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 路由专享导航-beforeEnter</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Home&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">component</span><span class="token operator">:</span> Home<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/home&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;/home/:id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;路由专项钩子&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// Home-page</span></span>
<span class="line">  <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/about&quot;</span><span class="token operator">&gt;</span>前往About页面<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">&quot;goToHome&quot;</span><span class="token operator">&gt;</span>未失活路由<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>view<span class="token operator">&gt;</span> <span class="token operator">--</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>useRouter<span class="token punctuation">,</span> onBeforeRouteLeave<span class="token punctuation">,</span> onBeforeRouteUpdate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">goToHome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"> <span class="token function">onBeforeRouteLeave</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;离开时调用&#39;</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token function">onBeforeRouteUpdate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;复用时调用&#39;</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+'" alt="image-20240527222526140"></p><p>整体的解析：</p><ol><li>触发路由导航</li><li>判断是否组件失活，未失活就直接执行全局路由<code>beforeEach</code>;</li><li>调用<code>beforeRouteUpdate</code>更新路由导航；</li><li>调用全局钩子<code>beforeResolve</code>进行解析；</li><li>调用全局后置钩子<code>afterEach</code>;</li><li>触发 DOM 更新。</li></ol><h2 id="失活的组件路由导航解析流程" tabindex="-1"><a class="header-anchor" href="#失活的组件路由导航解析流程"><span>失活的组件路由导航解析流程</span></a></h2><p>失活的组件，代码如上述的一致，当跳转到<code>about page</code>页面的路由导航卫士触发情况。</p><p><img src="'+o+'" alt="image-20240527223259200"></p><p>整体的解析流程：</p><ol><li>触发路由导航；</li><li>判断组件是否失活，是则调用<code>beforeRouteLeave</code>, 这个就能获取到home路由的组件实例，和即将去的路由信息；</li><li>调用全局守卫<code>beforeEach</code></li><li>调用路由配置的专享钩子<code>beforeEnter</code></li><li>解析异步路由组件</li><li>在新的组件中调用<code>beforeRouteEnter</code>, 需要注意，这里是不能拿到新组件实例的</li><li>调用全局的 <code>beforeResolve</code></li><li>导航被确认</li><li>调用全局的后置钩子 <code>afterEach</code></li><li>触发 DOM 更新；</li><li>这个时候就需要将创建好的组件实例则作为<code>beforeRouteEnter</code>的next方法参数传入执行。</li></ol><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>这里就是关于vue-router的路由导航卫士实际解析流程的情况，很多时候还是需要自己去敲代码去实现查看情况， 光看文档和八股文是不能很好的去理解这些知识。</p>',24),i=[c];function r(u,k){return s(),a("div",null,i)}const v=n(l,[["render",r],["__file","luyoudaohangweishijiexiliucheng.html.vue"]]),m=JSON.parse('{"path":"/blogs/luyoudaohangweishijiexiliucheng.html","title":"关于路由导航卫视解析流程","lang":"en-US","frontmatter":{"categories":["Vue"],"tags":["Vue-router"],"date":"2024-04-25T00:00:00.000Z"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"实际的解析流程","slug":"实际的解析流程","link":"#实际的解析流程","children":[]},{"level":2,"title":"理解组件失活","slug":"理解组件失活","link":"#理解组件失活","children":[]},{"level":2,"title":"未失活的组件路由导航解析流程","slug":"未失活的组件路由导航解析流程","link":"#未失活的组件路由导航解析流程","children":[]},{"level":2,"title":"失活的组件路由导航解析流程","slug":"失活的组件路由导航解析流程","link":"#失活的组件路由导航解析流程","children":[]},{"level":2,"title":"结语","slug":"结语","link":"#结语","children":[]}],"git":{"createdTime":1718266904000,"updatedTime":1718268586000,"contributors":[{"name":"tiantao","email":"tiantao_yb@139.com","commits":2}]},"filePathRelative":"blogs/路由导航卫士解析流程.md"}');export{v as comp,m as data};
